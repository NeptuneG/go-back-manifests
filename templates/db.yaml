apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Release.Namespace }}
  name: db
  labels:
    app: db
    {{- include "go-back.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db
  template:
    metadata:
      namespace: {{ .Release.Namespace }}
      labels:
        app: db
    spec:
      containers:
      - name: db
        image: postgres:14.1-alpine3.14
        ports:
        - containerPort: 5432
          protocol: TCP
          name: tcp
        env:
        - name: TZ
          value: "Asia/Tokyo"
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: psql
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: psql
              key: password
        - name: POSTGRES_HOST_AUTH_METHOD
          value: trust
        - name: PG_DATA
          value: /var/lib/pg_data
        resources:
          limits:
            memory: 512Mi
            cpu: "0.3"
          requests:
            memory: 128Mi
            cpu: "0.1"
        volumeMounts:
        - name: initdb
          mountPath: /docker-entrypoint-initdb.d
        - name: db-data
          mountPath: /var/lib/pg_data
      volumes:
      - name: db-data
        persistentVolumeClaim:
          claimName: db-data
      - name: initdb
        configMap:
          name: initdb
---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: {{ .Release.Namespace }}
  name: initdb
  labels:
    app: db
data:
  initdb.sh: |
    psql -U $POSTGRES_USER -tc "SELECT 1 FROM pg_database WHERE datname = 'live_development'" | grep -q 1 || psql -U $POSTGRES_USER -c "CREATE DATABASE live_development"
    psql -U $POSTGRES_USER -tc "SELECT 1 FROM pg_database WHERE datname = 'payment_development'" | grep -q 1 || psql -U $POSTGRES_USER  -c "CREATE DATABASE payment_development"
    psql -U $POSTGRES_USER -tc "SELECT 1 FROM pg_database WHERE datname = 'auth_development'" | grep -q 1 || psql -U $POSTGRES_USER  -c "CREATE DATABASE auth_development"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: {{ .Release.Namespace }}
  name: db-data
spec:
  storageClassName: gce-pd
  resources:
    requests:
      storage: 1Gi
  accessModes:
    - ReadWriteOnce

---
apiVersion: v1
kind: Service
metadata:
  namespace: {{ .Release.Namespace }}
  name: db
  labels:
    {{- include "go-back.labels" . | nindent 4 }}
spec:
  type: ClusterIP
  selector:
    app: db
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
      appProtocol: postgresql
      name: tcp
